{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the functions project, an open source, curiosity-driven tool for optimizing the administration of function as a service (FaaS) technologies. Our purpose is to make it easier to build, maintain and deploy serverless functions. Resources \u00b6 GitHub: https://github.com/Katolus/functions PyPI: https://pypi.org/project/functions-cli/ License: MIT Features \u00b6 The project is still under deep development, and there is still much work to be done even to reach the base quality. Nonetheless, we believe there is value in using it as it is if it fits your needs and requirements (Python + Linux). Feedback, issues and request are more than welcome. See the road map to see how our vision might need your future interest. In the following sections, we list a summary of the functionalities that the tool can perform. Locally \u00b6 Generate new template function directories for starting new functions. Two types GCP http / pubsub . Add an existing function to the function registry to be run and deployed as functions native to the package. Build pre-generated, validated and locally existing functions using Docker. Operate ( deploy / remove ) Google Cloud Platform functions from a local machine. Store information about the built, run and deployed functions locally for reference and configuration. Print out information about functions and their statuses (Build/Deployed/Running) using the list command. Log function history using a log file stored on your local device. GCP \u00b6 Deploy locally existing functions as cloud functions. Limited to two types - http and pubsub . Delete functions deployed to GCP using this package. Additional Context \u00b6 Anyone interested in additional details is invited to view the extended source of documentation directly in Github. Proposals, ADRs for people seriously inquisitive about how we built this project.","title":"Introduction"},{"location":"#resources","text":"GitHub: https://github.com/Katolus/functions PyPI: https://pypi.org/project/functions-cli/ License: MIT","title":"Resources"},{"location":"#features","text":"The project is still under deep development, and there is still much work to be done even to reach the base quality. Nonetheless, we believe there is value in using it as it is if it fits your needs and requirements (Python + Linux). Feedback, issues and request are more than welcome. See the road map to see how our vision might need your future interest. In the following sections, we list a summary of the functionalities that the tool can perform.","title":"Features"},{"location":"#locally","text":"Generate new template function directories for starting new functions. Two types GCP http / pubsub . Add an existing function to the function registry to be run and deployed as functions native to the package. Build pre-generated, validated and locally existing functions using Docker. Operate ( deploy / remove ) Google Cloud Platform functions from a local machine. Store information about the built, run and deployed functions locally for reference and configuration. Print out information about functions and their statuses (Build/Deployed/Running) using the list command. Log function history using a log file stored on your local device.","title":"Locally"},{"location":"#gcp","text":"Deploy locally existing functions as cloud functions. Limited to two types - http and pubsub . Delete functions deployed to GCP using this package.","title":"GCP"},{"location":"#additional-context","text":"Anyone interested in additional details is invited to view the extended source of documentation directly in Github. Proposals, ADRs for people seriously inquisitive about how we built this project.","title":"Additional Context"},{"location":"cli/","text":"All of the interactions with the tool are done via the command-line interface. Once you install functions , the interface will be available to you automatically. The functions commands come with subcommands, so make sure you explore their purpose. If you are unsure, remember that running functions or functions --help will output practical information to your terminal. Functions provide the ability to autocomplete commands. You can enable them by running functions --install-completion in the terminal. We use automated documentation generation to surface some of the commands you mind find useful. functions \u00b6 CLI tool that helps you manage your (FaaS) components. Usage : 1 $ functions [ OPTIONS ] COMMAND [ ARGS ] ... Options : --verbose : Enable verbose logging [default: False] --version : Print the version and exit --install-completion : Install completion for the current shell. --show-completion : Show completion for the current shell, to copy it or customize the installation. --help : Show this message and exit. Commands : add : Add a function to the function registry. build : Build a function. components : Manage the components of the functions... delete : Delete a function with all its data from the... gcp : Interact with GCP functions. list : List all functions in the registry. logs : Print the logs of functions CLI. new : Create new templated functions. remove : Remove a function from the registry. run : Run a function locally using the built image. stop : Stop a function running locally. sync : Sync registry functions. functions add \u00b6 Add a function to the function registry. Usage : 1 $ functions add [ OPTIONS ] FUNCTION_DIR Arguments : FUNCTION_DIR : The directory of the function to add [required] Options : --help : Show this message and exit. functions build \u00b6 Build a function. Usage : 1 $ functions build [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to build [required] Options : --disable-logs : Disable build output [default: False] --help : Show this message and exit. functions components \u00b6 Manage the components of the functions package. Usage : 1 $ functions components [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : docker : Manage the docker component. gcp : Manage the GCP component. functions components docker \u00b6 Manage the docker component. Usage : 1 $ functions components docker [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : check : Check if the docker component is available. instructions : Show instructions for the docker component. functions components docker check \u00b6 Check if the docker component is available. Usage : 1 $ functions components docker check [ OPTIONS ] Options : --help : Show this message and exit. functions components docker instructions \u00b6 Show instructions for the docker component. Usage : 1 $ functions components docker instructions [ OPTIONS ] Options : --help : Show this message and exit. functions components gcp \u00b6 Manage the GCP component. Usage : 1 $ functions components gcp [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : check : Check if the GCP component is available. instructions : Show instructions for the GCP component. functions components gcp check \u00b6 Check if the GCP component is available. Usage : 1 $ functions components gcp check [ OPTIONS ] Options : --help : Show this message and exit. functions components gcp instructions \u00b6 Show instructions for the GCP component. Usage : 1 $ functions components gcp instructions [ OPTIONS ] Options : --help : Show this message and exit. functions delete \u00b6 Delete a function with all its data from the registry. Usage : 1 $ functions delete [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to delete [required] Options : --help : Show this message and exit. functions gcp \u00b6 Interact with GCP functions. Usage : 1 $ functions gcp [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : delete : Deletes resources associated with a function... deploy : Deploy a function in GCP. describe : Shows information about a function deployed... list : List functions deployed to a service in GCP logs : Show logs of a function deployed to GCP. functions gcp delete \u00b6 Deletes resources associated with a function in GCP. Usage : 1 $ functions gcp delete [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to delete [required] Options : --help : Show this message and exit. functions gcp deploy \u00b6 Deploy a function in GCP. Usage : 1 $ functions gcp deploy [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to deploy [required] Options : --help : Show this message and exit. functions gcp describe \u00b6 Shows information about a function deployed in GCP. Usage : 1 $ functions gcp describe [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : Name of the function in registry [required] Options : --help : Show this message and exit. functions gcp list \u00b6 List functions deployed to a service in GCP Usage : 1 $ functions gcp list [ OPTIONS ] Options : --service [cloud_function] : Type of service to list [default: cloud_function] --help : Show this message and exit. functions gcp logs \u00b6 Show logs of a function deployed to GCP. Usage : 1 $ functions gcp logs [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : Name of the function in registry [required] Options : --help : Show this message and exit. functions list \u00b6 List all functions in the registry. Usage : 1 $ functions list [ OPTIONS ] Options : --help : Show this message and exit. functions logs \u00b6 Print the logs of functions CLI. Usage : 1 $ functions logs [ OPTIONS ] Options : --help : Show this message and exit. functions new \u00b6 Create new templated functions. Usage : 1 $ functions new [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : http : Create a new function that uses HTTP as a... pubsub : Create a new function that uses Google Cloud... functions new http \u00b6 Create a new function that uses HTTP as a trigger. Usage : 1 $ functions new http [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to create [required] Options : --dir DIRECTORY : Path that will be used as a root path for the new function's files --help : Show this message and exit. functions new pubsub \u00b6 Create a new function that uses Google Cloud Pub/Sub as a trigger. Usage : 1 $ functions new pubsub [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to create [required] Options : --dir DIRECTORY : Path that will be used as a root path for the new function's files --help : Show this message and exit. functions remove \u00b6 Remove a function from the registry. Usage : 1 $ functions remove [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to remove [required] Options : --help : Show this message and exit. functions run \u00b6 Run a function locally using the built image. Usage : 1 $ functions run [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to run [required] Options : --help : Show this message and exit. functions stop \u00b6 Stop a function running locally. Usage : 1 $ functions stop [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to stop [required] Options : --help : Show this message and exit. functions sync \u00b6 Sync registry functions. Usage : 1 $ functions sync [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : gcp : Sync registry functions with GCP. local : Sync registry functions with Docker. functions sync gcp \u00b6 Sync registry functions with GCP. Usage : 1 $ functions sync gcp [ OPTIONS ] Options : --help : Show this message and exit. functions sync local \u00b6 Sync registry functions with Docker. Usage : 1 $ functions sync local [ OPTIONS ] Options : --help : Show this message and exit.","title":"CLI docs"},{"location":"cli/#functions","text":"CLI tool that helps you manage your (FaaS) components. Usage : 1 $ functions [ OPTIONS ] COMMAND [ ARGS ] ... Options : --verbose : Enable verbose logging [default: False] --version : Print the version and exit --install-completion : Install completion for the current shell. --show-completion : Show completion for the current shell, to copy it or customize the installation. --help : Show this message and exit. Commands : add : Add a function to the function registry. build : Build a function. components : Manage the components of the functions... delete : Delete a function with all its data from the... gcp : Interact with GCP functions. list : List all functions in the registry. logs : Print the logs of functions CLI. new : Create new templated functions. remove : Remove a function from the registry. run : Run a function locally using the built image. stop : Stop a function running locally. sync : Sync registry functions.","title":"functions"},{"location":"cli/#functions-add","text":"Add a function to the function registry. Usage : 1 $ functions add [ OPTIONS ] FUNCTION_DIR Arguments : FUNCTION_DIR : The directory of the function to add [required] Options : --help : Show this message and exit.","title":"functions add"},{"location":"cli/#functions-build","text":"Build a function. Usage : 1 $ functions build [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to build [required] Options : --disable-logs : Disable build output [default: False] --help : Show this message and exit.","title":"functions build"},{"location":"cli/#functions-components","text":"Manage the components of the functions package. Usage : 1 $ functions components [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : docker : Manage the docker component. gcp : Manage the GCP component.","title":"functions components"},{"location":"cli/#functions-components-docker","text":"Manage the docker component. Usage : 1 $ functions components docker [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : check : Check if the docker component is available. instructions : Show instructions for the docker component.","title":"functions components docker"},{"location":"cli/#functions-components-docker-check","text":"Check if the docker component is available. Usage : 1 $ functions components docker check [ OPTIONS ] Options : --help : Show this message and exit.","title":"functions components docker check"},{"location":"cli/#functions-components-docker-instructions","text":"Show instructions for the docker component. Usage : 1 $ functions components docker instructions [ OPTIONS ] Options : --help : Show this message and exit.","title":"functions components docker instructions"},{"location":"cli/#functions-components-gcp","text":"Manage the GCP component. Usage : 1 $ functions components gcp [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : check : Check if the GCP component is available. instructions : Show instructions for the GCP component.","title":"functions components gcp"},{"location":"cli/#functions-components-gcp-check","text":"Check if the GCP component is available. Usage : 1 $ functions components gcp check [ OPTIONS ] Options : --help : Show this message and exit.","title":"functions components gcp check"},{"location":"cli/#functions-components-gcp-instructions","text":"Show instructions for the GCP component. Usage : 1 $ functions components gcp instructions [ OPTIONS ] Options : --help : Show this message and exit.","title":"functions components gcp instructions"},{"location":"cli/#functions-delete","text":"Delete a function with all its data from the registry. Usage : 1 $ functions delete [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to delete [required] Options : --help : Show this message and exit.","title":"functions delete"},{"location":"cli/#functions-gcp","text":"Interact with GCP functions. Usage : 1 $ functions gcp [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : delete : Deletes resources associated with a function... deploy : Deploy a function in GCP. describe : Shows information about a function deployed... list : List functions deployed to a service in GCP logs : Show logs of a function deployed to GCP.","title":"functions gcp"},{"location":"cli/#functions-gcp-delete","text":"Deletes resources associated with a function in GCP. Usage : 1 $ functions gcp delete [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to delete [required] Options : --help : Show this message and exit.","title":"functions gcp delete"},{"location":"cli/#functions-gcp-deploy","text":"Deploy a function in GCP. Usage : 1 $ functions gcp deploy [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to deploy [required] Options : --help : Show this message and exit.","title":"functions gcp deploy"},{"location":"cli/#functions-gcp-describe","text":"Shows information about a function deployed in GCP. Usage : 1 $ functions gcp describe [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : Name of the function in registry [required] Options : --help : Show this message and exit.","title":"functions gcp describe"},{"location":"cli/#functions-gcp-list","text":"List functions deployed to a service in GCP Usage : 1 $ functions gcp list [ OPTIONS ] Options : --service [cloud_function] : Type of service to list [default: cloud_function] --help : Show this message and exit.","title":"functions gcp list"},{"location":"cli/#functions-gcp-logs","text":"Show logs of a function deployed to GCP. Usage : 1 $ functions gcp logs [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : Name of the function in registry [required] Options : --help : Show this message and exit.","title":"functions gcp logs"},{"location":"cli/#functions-list","text":"List all functions in the registry. Usage : 1 $ functions list [ OPTIONS ] Options : --help : Show this message and exit.","title":"functions list"},{"location":"cli/#functions-logs","text":"Print the logs of functions CLI. Usage : 1 $ functions logs [ OPTIONS ] Options : --help : Show this message and exit.","title":"functions logs"},{"location":"cli/#functions-new","text":"Create new templated functions. Usage : 1 $ functions new [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : http : Create a new function that uses HTTP as a... pubsub : Create a new function that uses Google Cloud...","title":"functions new"},{"location":"cli/#functions-new-http","text":"Create a new function that uses HTTP as a trigger. Usage : 1 $ functions new http [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to create [required] Options : --dir DIRECTORY : Path that will be used as a root path for the new function's files --help : Show this message and exit.","title":"functions new http"},{"location":"cli/#functions-new-pubsub","text":"Create a new function that uses Google Cloud Pub/Sub as a trigger. Usage : 1 $ functions new pubsub [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to create [required] Options : --dir DIRECTORY : Path that will be used as a root path for the new function's files --help : Show this message and exit.","title":"functions new pubsub"},{"location":"cli/#functions-remove","text":"Remove a function from the registry. Usage : 1 $ functions remove [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to remove [required] Options : --help : Show this message and exit.","title":"functions remove"},{"location":"cli/#functions-run","text":"Run a function locally using the built image. Usage : 1 $ functions run [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to run [required] Options : --help : Show this message and exit.","title":"functions run"},{"location":"cli/#functions-stop","text":"Stop a function running locally. Usage : 1 $ functions stop [ OPTIONS ] FUNCTION_NAME Arguments : FUNCTION_NAME : The name of the function to stop [required] Options : --help : Show this message and exit.","title":"functions stop"},{"location":"cli/#functions-sync","text":"Sync registry functions. Usage : 1 $ functions sync [ OPTIONS ] COMMAND [ ARGS ] ... Options : --help : Show this message and exit. Commands : gcp : Sync registry functions with GCP. local : Sync registry functions with Docker.","title":"functions sync"},{"location":"cli/#functions-sync-gcp","text":"Sync registry functions with GCP. Usage : 1 $ functions sync gcp [ OPTIONS ] Options : --help : Show this message and exit.","title":"functions sync gcp"},{"location":"cli/#functions-sync-local","text":"Sync registry functions with Docker. Usage : 1 $ functions sync local [ OPTIONS ] Options : --help : Show this message and exit.","title":"functions sync local"},{"location":"environment_support/","text":"Due to limited amount of resources and a narrow development scope, functions are available/working on a limited subset of environments (OS + runtime). Operating systems \u00b6 OS name Status Was tested? Ubuntu(Linux) Available Yes macOS Available Yes - Mildly Windows Unknown No Programming languages and runtime versions \u00b6 There are several places where a language limitation might be enforced by our code. Locally \u00b6 \"Functions\" managed by the functions package are run by docker and therefore require correct execution scope. Because of execution scope for various languages requires separate implementations, the current support is limited. At the moment this is limited to Python . That said, since the scope is defined in the generated Dockerfile , there is nothing stopping you from writing your own Dockerfile and support your own execution scope. GCP \u00b6 Because cloud functions have a limited runtime set , we need to limit these versions as well. Here is an estimate of what runtimes are available. Language Version Value Was tested? Python 3.7 python37 Yes Python 3.8 python38 Yes Python 3.9 python39 Yes Node 10 nodejs10 No Node 12 nodejs12 No Node 14 nodejs14 No Node 16 nodejs16 No Java 11 java11 No Go 1.11 go111 No Go 1.13 go113 No Go 1.16 go116 No .NET Core 3.1 dotnet3 No PHP 7.4 php74 No Ruby 2.6 ruby26 No Ruby 2.7 ruby27 No Our goal is to find a solution to get this information from an underlying tool, but it is not always possible so we need to bottleneck it at our package level. We are completely aware that it is not a perfect solution, but are trying to be as transparent as possible.","title":"Environment support"},{"location":"environment_support/#operating-systems","text":"OS name Status Was tested? Ubuntu(Linux) Available Yes macOS Available Yes - Mildly Windows Unknown No","title":"Operating systems"},{"location":"environment_support/#programming-languages-and-runtime-versions","text":"There are several places where a language limitation might be enforced by our code.","title":"Programming languages and runtime versions"},{"location":"environment_support/#locally","text":"\"Functions\" managed by the functions package are run by docker and therefore require correct execution scope. Because of execution scope for various languages requires separate implementations, the current support is limited. At the moment this is limited to Python . That said, since the scope is defined in the generated Dockerfile , there is nothing stopping you from writing your own Dockerfile and support your own execution scope.","title":"Locally"},{"location":"environment_support/#gcp","text":"Because cloud functions have a limited runtime set , we need to limit these versions as well. Here is an estimate of what runtimes are available. Language Version Value Was tested? Python 3.7 python37 Yes Python 3.8 python38 Yes Python 3.9 python39 Yes Node 10 nodejs10 No Node 12 nodejs12 No Node 14 nodejs14 No Node 16 nodejs16 No Java 11 java11 No Go 1.11 go111 No Go 1.13 go113 No Go 1.16 go116 No .NET Core 3.1 dotnet3 No PHP 7.4 php74 No Ruby 2.6 ruby26 No Ruby 2.7 ruby27 No Our goal is to find a solution to get this information from an underlying tool, but it is not always possible so we need to bottleneck it at our package level. We are completely aware that it is not a perfect solution, but are trying to be as transparent as possible.","title":"GCP"},{"location":"examples/","text":"We are very aware that examples are one of the most critical sections in our documentation pages, so we are working very hard to build them with quality and intention. Please be patient and watch this space...","title":"Examples"},{"location":"how_it_works/","text":"As it is with many projects, sometimes you barely have any idea how your tools work. Ha! Not here! We want to give you an opportunity to understand how things work behind the scenes. Knowing this is not required to use functions , but if you are a born Curiosateles, check it out. So how does functions work? \u00b6 We will look here in a high level overview of how this tool structured. How different components interact. What happens when you type a functions command and which components are triggered. Layout \u00b6 Here lays a high-level layout of how our tool is built and how various components interact. Following assumes that functions is installed and available in the terminal. User types a functions command in the terminal. functions will evaluate available components and store this information in the config file. Command will raise exceptions if required components like docker are not present. Next, it will evaluate the registry if information about this function is available and if said registry needs to be updated. Depending on the command type, docker will be used to run or serve a targeted function. If a command deploys resources to a cloud provider, we will use the correct provider to manipulate resources. Subject to authorization and sub-tool (like gcloud ) availability. Internal components \u00b6 Typer core \u00b6 Our tool is built on top a well known typer CLI tool. Config \u00b6 Custom component responsible for saving functions configuration information on the file system. Functions Registry \u00b6 Custom component responsible for saving information about each added, build, run, stopped and deployed \"function\". Information stored on the file system. External components \u00b6 Docker \u00b6 All that makes functions fun, easy and functional is power by docker . We use it manage your functions locally and more. FaaS providers \u00b6 Google Cloud Platform (GCP) - We use cloud functions as a proof of concept for creating FaaS resources in the cloud. More to come... Invisible patterns \u00b6 Exceptions - A set of methods, wrappers and custom error classes built to handle exceptions from different parts of the tool in a unified way. Logging - functions can manipulate cloud and local resources therefore a logging functionality was developed to offer the bare minimum of viewing operation outcomes.","title":"How it works"},{"location":"how_it_works/#so-how-does-functions-work","text":"We will look here in a high level overview of how this tool structured. How different components interact. What happens when you type a functions command and which components are triggered.","title":"So how does functions work?"},{"location":"how_it_works/#layout","text":"Here lays a high-level layout of how our tool is built and how various components interact. Following assumes that functions is installed and available in the terminal. User types a functions command in the terminal. functions will evaluate available components and store this information in the config file. Command will raise exceptions if required components like docker are not present. Next, it will evaluate the registry if information about this function is available and if said registry needs to be updated. Depending on the command type, docker will be used to run or serve a targeted function. If a command deploys resources to a cloud provider, we will use the correct provider to manipulate resources. Subject to authorization and sub-tool (like gcloud ) availability.","title":"Layout"},{"location":"how_it_works/#internal-components","text":"","title":"Internal components"},{"location":"how_it_works/#typer-core","text":"Our tool is built on top a well known typer CLI tool.","title":"Typer core"},{"location":"how_it_works/#config","text":"Custom component responsible for saving functions configuration information on the file system.","title":"Config"},{"location":"how_it_works/#functions-registry","text":"Custom component responsible for saving information about each added, build, run, stopped and deployed \"function\". Information stored on the file system.","title":"Functions Registry"},{"location":"how_it_works/#external-components","text":"","title":"External components"},{"location":"how_it_works/#docker","text":"All that makes functions fun, easy and functional is power by docker . We use it manage your functions locally and more.","title":"Docker"},{"location":"how_it_works/#faas-providers","text":"Google Cloud Platform (GCP) - We use cloud functions as a proof of concept for creating FaaS resources in the cloud. More to come...","title":"FaaS providers"},{"location":"how_it_works/#invisible-patterns","text":"Exceptions - A set of methods, wrappers and custom error classes built to handle exceptions from different parts of the tool in a unified way. Logging - functions can manipulate cloud and local resources therefore a logging functionality was developed to offer the bare minimum of viewing operation outcomes.","title":"Invisible patterns"},{"location":"idea/","text":"Here you can find additional context on purpose behind making this project and some of its criteria, expectations and scope. Quick Pitch \u00b6 functions - a command line tool that helps manage functions as a service (FaaS) components locally and remotely. Background \u00b6 If you are a developer working with any cloud providers, the chance is, you would have heard about serverless functions. You can use them to run small, independent components that can scale on demand. Their scope is usually that of a single task. Examples include: building a single point API, building a triggered pipeline, connecting to a resource etc... It is a fantastic piece of technology that can decouple large systems and support a wide variety of cases. Generally, it is easy to deploy a simple serverless function as a template version to fit your basic needs. It gets a little more complicated if you face a task that is out of the ordinary. Questions emerge. How do you keep track of your work? What was deployed or what was run. How do you deploy the function? How do you test it? It is not easy to handle all that using a standard tool like the gcloud command-line tool, and it is not even close to being fast. Usually, you need to deploy the function to see any results. Some providers offer helpful libraries/tools that allow you to run your serverless functions locally, but even that quickly gets complicated and requires you to learn another repository and its documentation. Even if you pass through, the automations you built will be highly specific to the provider you are using by which you are locked in. One of the things that made HashiCorp products so great is that they allow for flexibility. Flexibility and modularity are becoming far more important nowadays than it ever was. In an attempt to tackle all these pain-points and make any serverless task a much more fun experience, we propose building a software tool that takes care of all the local environment, deployment, tracking, logging and provider-specific logic and gives a developer a homogeneous CLI interface to interact with their FaaS components. A tool that takes away the complexity and gives back an intuitive work tool for everyone to use. Progress so far \u00b6 The project started as a solo project in between jobs. It's scope was massively undercut from the start, but with time and experience, the spectrum became something that we can track with much higher confidence. The project is a battleground for growing developer skills, and it has been treated like that, still yet to see its first release. Objectives \u00b6 Fail and learn. Experiment and test out various ideas. Provide value to at least one person. Get people interested. Principle Values \u00b6 Easy to Use. Safe. Simple. Timeframe \u00b6 Stage Summary Delivery First Release The first release targets a stable alpha version with enough functionalities to test the idea in action. Planned for the end of 2021 Engineering budget \u00b6 In the first stage, the project is being developed by a single person as a side project between jobs. Since that person has other commitments, the project has taken a lower priority, and work on it goes slower than anticipated. So if you believe in this project, the repository is set up to support community contributions if people value it enough to contribute. Monitoring and Evaluation \u00b6 The project is being reviewed at least every month to reevaluate timeframes, view project interactions and adjust documentation accordingly. Lessons learned \u00b6 Beyond elemental learnings such as how to pick a suitable license or which tool to use to perform a specific task, here lay the lessons with a broader, more generic scope: It takes a lot of time, effort and brainpower to build a quality project. The scope is always bigger than you initially thought to be. It is vital to build and bring tools to the project. Planning out the scope and writing a comprehensive overview is reasonably the most crucial step. Otherwise, you are unsure what you are trying to do or how the project should be structured. It is worth the effort . Documentation is as important if not more important than code.","title":"Idea"},{"location":"idea/#quick-pitch","text":"functions - a command line tool that helps manage functions as a service (FaaS) components locally and remotely.","title":"Quick Pitch"},{"location":"idea/#background","text":"If you are a developer working with any cloud providers, the chance is, you would have heard about serverless functions. You can use them to run small, independent components that can scale on demand. Their scope is usually that of a single task. Examples include: building a single point API, building a triggered pipeline, connecting to a resource etc... It is a fantastic piece of technology that can decouple large systems and support a wide variety of cases. Generally, it is easy to deploy a simple serverless function as a template version to fit your basic needs. It gets a little more complicated if you face a task that is out of the ordinary. Questions emerge. How do you keep track of your work? What was deployed or what was run. How do you deploy the function? How do you test it? It is not easy to handle all that using a standard tool like the gcloud command-line tool, and it is not even close to being fast. Usually, you need to deploy the function to see any results. Some providers offer helpful libraries/tools that allow you to run your serverless functions locally, but even that quickly gets complicated and requires you to learn another repository and its documentation. Even if you pass through, the automations you built will be highly specific to the provider you are using by which you are locked in. One of the things that made HashiCorp products so great is that they allow for flexibility. Flexibility and modularity are becoming far more important nowadays than it ever was. In an attempt to tackle all these pain-points and make any serverless task a much more fun experience, we propose building a software tool that takes care of all the local environment, deployment, tracking, logging and provider-specific logic and gives a developer a homogeneous CLI interface to interact with their FaaS components. A tool that takes away the complexity and gives back an intuitive work tool for everyone to use.","title":"Background"},{"location":"idea/#progress-so-far","text":"The project started as a solo project in between jobs. It's scope was massively undercut from the start, but with time and experience, the spectrum became something that we can track with much higher confidence. The project is a battleground for growing developer skills, and it has been treated like that, still yet to see its first release.","title":"Progress so far"},{"location":"idea/#objectives","text":"Fail and learn. Experiment and test out various ideas. Provide value to at least one person. Get people interested.","title":"Objectives"},{"location":"idea/#principle-values","text":"Easy to Use. Safe. Simple.","title":"Principle Values"},{"location":"idea/#timeframe","text":"Stage Summary Delivery First Release The first release targets a stable alpha version with enough functionalities to test the idea in action. Planned for the end of 2021","title":"Timeframe"},{"location":"idea/#engineering-budget","text":"In the first stage, the project is being developed by a single person as a side project between jobs. Since that person has other commitments, the project has taken a lower priority, and work on it goes slower than anticipated. So if you believe in this project, the repository is set up to support community contributions if people value it enough to contribute.","title":"Engineering budget"},{"location":"idea/#monitoring-and-evaluation","text":"The project is being reviewed at least every month to reevaluate timeframes, view project interactions and adjust documentation accordingly.","title":"Monitoring and Evaluation"},{"location":"idea/#lessons-learned","text":"Beyond elemental learnings such as how to pick a suitable license or which tool to use to perform a specific task, here lay the lessons with a broader, more generic scope: It takes a lot of time, effort and brainpower to build a quality project. The scope is always bigger than you initially thought to be. It is vital to build and bring tools to the project. Planning out the scope and writing a comprehensive overview is reasonably the most crucial step. Otherwise, you are unsure what you are trying to do or how the project should be structured. It is worth the effort . Documentation is as important if not more important than code.","title":"Lessons learned"},{"location":"roadmap/","text":"To understand what this project is about, check out the idea section . Moving forward, our goal is to provide a valuable, tested, and robust tool that others can use to their benefit. First release and core project progress can be tracked here . Once we reach the base quality, the are other project and idea that we hope to work on, given that functions starts providing value and receives required traction. We plan to grow its capabilities, having some short and medium term goals in mind. Mission \u00b6 Make Functions as a Service (FaaS) easy to work with. Short-term - Current focus \u00b6 Clean up \u00b6 Initial prototype bursting left chunks on inconsistent code. We want to bring cohesion and best practices to the first version of the project so that the technical debt does not creep on us in the future. Status : Planning AWS lambda support \u00b6 We want to add support for AWS lambda functions locally and deployment. Status : Planning Runtime support \u00b6 Currently, the support for runtimes is quite limited due to the narrow scope of the initial implementation. We want to ensure anyone can use whichever runtime they want, given that it is supported. Status : Planning Test coverage \u00b6 As with any idea that made sense (will see about that) in the prototyping phase, we want to make sure that is well tested moving forward. Status : Planning Mid-term - What comes next \u00b6 Build-up documentation \u00b6 It is a shame how much documentation is missing. We want to make sure that there are decision records , components descriptions , examples and more, which users and developers can quickly reference at any time. Status : Ongoing development Custom commands and scripts \u00b6 We want to enable the user to create their enhancements to the functioning of the package by allowing the definition of custom scripts and commands. Status : Idea GitHub source URL as a source path for a function \u00b6 We want to support using a Github URL as a source for your function's source code. Status : Idea Evaluate Typer \u00b6 Despite the initial hype around this project, it does seem to be left out at the moment. The base package click seems to have much better support and extensibility. Status : Idea Docker executable \u00b6 We think that using python to execute the functions works well, however has it's limitations. Specifically when installing dependencies required to run deployment actions. All this can be neatly wrapped around with a Docker image, which needs to be in the scope of the package either way. Much easier to manage system interactions contained within an image. Status : Idea How to Get Involved \u00b6 We try to organize our project goals with GitHub projects. If there is an existing GitHub project, it is an excellent place to start aiding. If not, perhaps you can offer some expertise and lead an implementation forward. As always, reach out if you fancy a discussion.","title":"Roadmap"},{"location":"roadmap/#mission","text":"Make Functions as a Service (FaaS) easy to work with.","title":"Mission"},{"location":"roadmap/#short-term---current-focus","text":"","title":"Short-term - Current focus"},{"location":"roadmap/#clean-up","text":"Initial prototype bursting left chunks on inconsistent code. We want to bring cohesion and best practices to the first version of the project so that the technical debt does not creep on us in the future. Status : Planning","title":"Clean up"},{"location":"roadmap/#aws-lambda-support","text":"We want to add support for AWS lambda functions locally and deployment. Status : Planning","title":"AWS lambda support"},{"location":"roadmap/#runtime-support","text":"Currently, the support for runtimes is quite limited due to the narrow scope of the initial implementation. We want to ensure anyone can use whichever runtime they want, given that it is supported. Status : Planning","title":"Runtime support"},{"location":"roadmap/#test-coverage","text":"As with any idea that made sense (will see about that) in the prototyping phase, we want to make sure that is well tested moving forward. Status : Planning","title":"Test coverage"},{"location":"roadmap/#mid-term---what-comes-next","text":"","title":"Mid-term - What comes next"},{"location":"roadmap/#build-up-documentation","text":"It is a shame how much documentation is missing. We want to make sure that there are decision records , components descriptions , examples and more, which users and developers can quickly reference at any time. Status : Ongoing development","title":"Build-up documentation"},{"location":"roadmap/#custom-commands-and-scripts","text":"We want to enable the user to create their enhancements to the functioning of the package by allowing the definition of custom scripts and commands. Status : Idea","title":"Custom commands and scripts"},{"location":"roadmap/#github-source-url-as-a-source-path-for-a-function","text":"We want to support using a Github URL as a source for your function's source code. Status : Idea","title":"GitHub source URL as a source path for a function"},{"location":"roadmap/#evaluate-typer","text":"Despite the initial hype around this project, it does seem to be left out at the moment. The base package click seems to have much better support and extensibility. Status : Idea","title":"Evaluate Typer"},{"location":"roadmap/#docker-executable","text":"We think that using python to execute the functions works well, however has it's limitations. Specifically when installing dependencies required to run deployment actions. All this can be neatly wrapped around with a Docker image, which needs to be in the scope of the package either way. Much easier to manage system interactions contained within an image. Status : Idea","title":"Docker executable"},{"location":"roadmap/#how-to-get-involved","text":"We try to organize our project goals with GitHub projects. If there is an existing GitHub project, it is an excellent place to start aiding. If not, perhaps you can offer some expertise and lead an implementation forward. As always, reach out if you fancy a discussion.","title":"How to Get Involved"},{"location":"administration/","text":"This section includes background on how we administrate our functions project. We hope that the information noted here brings peace and trust in using the tool. You might even like it so much that you decide to help out! The Origins \u00b6 We created functions to address the accumulating difficulty in building features in an event ecosystem (PubSub). It started as a side project, meant to satisfy minimal requirements of being useful in the shortest time. With time it evolved to an open-source level aspiration. A swing at building a tool, used and contributed to by many. Maintenance \u00b6 These are early days, and the project is at its infant years. It lacks structure, resources and a tested sense of purpose. Hopefully, it will gain these over time. It is maintained on a casual basis, addressing issues here and there as the motivation comes in . If the project proves to be redundant, it will be abandoned to make space for other, more capable projects. So if you are using functions and don't want to lose it, head to any resources and show your appreciation. It will give us so much required motivation and keep us going. Governance \u00b6 All final decisions, features and future focus are made by Piotr Katolik , the architect of this project.","title":"Administration"},{"location":"administration/#the-origins","text":"We created functions to address the accumulating difficulty in building features in an event ecosystem (PubSub). It started as a side project, meant to satisfy minimal requirements of being useful in the shortest time. With time it evolved to an open-source level aspiration. A swing at building a tool, used and contributed to by many.","title":"The Origins"},{"location":"administration/#maintenance","text":"These are early days, and the project is at its infant years. It lacks structure, resources and a tested sense of purpose. Hopefully, it will gain these over time. It is maintained on a casual basis, addressing issues here and there as the motivation comes in . If the project proves to be redundant, it will be abandoned to make space for other, more capable projects. So if you are using functions and don't want to lose it, head to any resources and show your appreciation. It will give us so much required motivation and keep us going.","title":"Maintenance"},{"location":"administration/#governance","text":"All final decisions, features and future focus are made by Piotr Katolik , the architect of this project.","title":"Governance"},{"location":"administration/decisions/","text":"We strive to deliver a consistent, trusty solution for stable development. Our project is built on a structured change request system developed by the team. We impose this process to assure work is researched, reviewed, prioritized and documented with sufficient context and expectations. So, how do we make decisions? \u00b6 We use the following process. Each of the steps assumes a positive outcome from the stage before. Write a proposal . Review the proposal. Implement a prototype. Evaluate changes and implications through a functional review. Categorize change as a feature or architectural decision. Prior to any release, move accepted proposals into respective categories of documents - fdrs or adrs . Hopefully after this work, all the changes are discussed and the impact is flushed out. Proposals \u00b6 Documents based on the proposals template . The document describes the context and a problem that a given change is to update. Proposals include at least one solution option and supplement a range of research resources. ADRs - Architectural decision records \u00b6 An Architectural Decision (AD) is a software design choice that addresses a functional or non-functional requirement that is architecturally significant. - Source . Documents based on the adrs template . The document targets change of an architectural nature. FDRs - Feature decision records \u00b6 Feature documents explain why features or parts of the applications not categorized as architecture were our focus. They give context on - Why? and How?","title":"Decisions"},{"location":"administration/decisions/#so-how-do-we-make-decisions","text":"We use the following process. Each of the steps assumes a positive outcome from the stage before. Write a proposal . Review the proposal. Implement a prototype. Evaluate changes and implications through a functional review. Categorize change as a feature or architectural decision. Prior to any release, move accepted proposals into respective categories of documents - fdrs or adrs . Hopefully after this work, all the changes are discussed and the impact is flushed out.","title":"So, how do we make decisions?"},{"location":"administration/decisions/#proposals","text":"Documents based on the proposals template . The document describes the context and a problem that a given change is to update. Proposals include at least one solution option and supplement a range of research resources.","title":"Proposals"},{"location":"administration/decisions/#adrs---architectural-decision-records","text":"An Architectural Decision (AD) is a software design choice that addresses a functional or non-functional requirement that is architecturally significant. - Source . Documents based on the adrs template . The document targets change of an architectural nature.","title":"ADRs - Architectural decision records"},{"location":"administration/decisions/#fdrs---feature-decision-records","text":"Feature documents explain why features or parts of the applications not categorized as architecture were our focus. They give context on - Why? and How?","title":"FDRs - Feature decision records"}]}