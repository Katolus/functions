{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the functions project, an open source, curiosity-driven tool for optimizing the administration of function as a service (FaaS) technologies. Our purpose is to make it easier to build, maintain and deploy serverless functions. Resources \u00b6 GitHub: https://github.com/Katolus/functions PyPI: https://pypi.org/project/functions-cli/ Free software: MIT Features \u00b6 The project is still under deep development, and there is still much work to be done even to reach the base quality. Nonetheless, we believe there is value in using it as it is if it fits your needs and requirements (Python + Linux). Feedback, issues and request are more than welcome. See the road map to see how our vision might need your future interest. In the following sections, we list a summary of the functionalities that the tool can perform. Locally \u00b6 Generate new template function directories for starting new functions. Two types GCP http / pubsub . Add an existing function to the function registry to be run and deployed as functions native to the package. Build pre-generated, validated and locally existing functions using Docker. Operate ( deploy / remove ) Google Cloud Platform functions from a local machine. Store information about the built, run and deployed functions locally for reference and configuration. Print out information about functions and their statuses (Build/Deployed/Running) using the list command. Log function history using a log file stored on your local device. GCP \u00b6 Deploy locally existing functions as cloud functions. Limited to two types - http and pubsub . Delete functions deployed to GCP using this package. Additional Context \u00b6 Anyone interested in additional details is invited to view the extended source of documentation directly in Github. Proposals, ADRs for people seriously inquisitive about how we built this project.","title":"Introduction"},{"location":"#resources","text":"GitHub: https://github.com/Katolus/functions PyPI: https://pypi.org/project/functions-cli/ Free software: MIT","title":"Resources"},{"location":"#features","text":"The project is still under deep development, and there is still much work to be done even to reach the base quality. Nonetheless, we believe there is value in using it as it is if it fits your needs and requirements (Python + Linux). Feedback, issues and request are more than welcome. See the road map to see how our vision might need your future interest. In the following sections, we list a summary of the functionalities that the tool can perform.","title":"Features"},{"location":"#locally","text":"Generate new template function directories for starting new functions. Two types GCP http / pubsub . Add an existing function to the function registry to be run and deployed as functions native to the package. Build pre-generated, validated and locally existing functions using Docker. Operate ( deploy / remove ) Google Cloud Platform functions from a local machine. Store information about the built, run and deployed functions locally for reference and configuration. Print out information about functions and their statuses (Build/Deployed/Running) using the list command. Log function history using a log file stored on your local device.","title":"Locally"},{"location":"#gcp","text":"Deploy locally existing functions as cloud functions. Limited to two types - http and pubsub . Delete functions deployed to GCP using this package.","title":"GCP"},{"location":"#additional-context","text":"Anyone interested in additional details is invited to view the extended source of documentation directly in Github. Proposals, ADRs for people seriously inquisitive about how we built this project.","title":"Additional Context"},{"location":"environment_support/","text":"","title":"Environment support"},{"location":"idea/","text":"Here you can find additional context on purpose behind making this project and some of its criteria, expectations and scope. Quick Pitch \u00b6 functions - a command line tool that helps manage functions as a service (FaaS) components locally and remotely. Background \u00b6 If you are a developer working with any cloud providers, the chance is, you would have heard about serverless functions. You can use them to run small, independent components that can scale on demand. Their scope is usually that of a single task. Examples include: building a single point API, building a triggered pipeline, connecting to a resource etc... It is a fantastic piece of technology that can decouple large systems and support a wide variety of cases. Generally, it is easy to deploy a simple serverless function as a template version to fit your basic needs. It gets a little more complicated if you face a task that is out of the ordinary. Questions emerge. How do you keep track of your work? What was deployed or what was run. How do you deploy the function? How do you test it? It is not easy to handle all that using a standard tool like the gcloud command-line tool, and it is not even close to being fast. Usually, you need to deploy the function to see any results. Some providers offer helpful libraries/tools that allow you to run your serverless functions locally, but even that quickly gets complicated and requires you to learn another repository and its documentation. Even if you pass through, the automations you built will be highly specific to the provider you are using by which you are locked in. One of the things that made HashiCorp products so great is that they allow for flexibility. Flexibility and modularity are becoming far more important nowadays than it ever was. In an attempt to tackle all these pain-points and make any serverless task a much more fun experience, we propose building a software tool that takes care of all the local environment, deployment, tracking, logging and provider-specific logic and gives a developer a homogeneous CLI interface to interact with their FaaS components. A tool that takes away the complexity and gives back an intuitive work tool for everyone to use. Progress so far \u00b6 The project started as a solo project in between jobs. It's scope was massively undercut from the start, but with time and experience, the spectrum became something that we can track with much higher confidence. The project is a battleground for growing developer skills, and it has been treated like that, still yet to see its first release. Objectives \u00b6 Fail and learn. Experiment and test out various ideas. Provide value to at least one person. Get people interested. Principle Values \u00b6 Easy to Use. Safe. Simple. Timeframe \u00b6 Stage Summary Delivery First Release The first release targets a stable alpha version with enough functionalities to test the idea in action. Planned for the end of 2021 Engineering budget \u00b6 In the first stage, the project is being developed by a single person as a side project between jobs. Since that person has other commitments, the project has taken a lower priority, and work on it goes slower than anticipated. So if you believe in this project, the repository is set up to support community contributions if people value it enough to contribute. Monitoring and Evaluation \u00b6 The project is being reviewed at least every month to reevaluate timeframes, view project interactions and adjust documentation accordingly. Lessons learned \u00b6 Beyond elemental learnings such as how to pick a suitable license or which tool to use to perform a specific task, here lay the lessons with a broader, more generic scope: It takes a lot of time, effort and brainpower to build a quality project. The scope is always bigger than you initially thought to be. It is vital to build and bring tools to the project. Planning out the scope and writing a comprehensive overview is reasonably the most crucial step. Otherwise, you are unsure what you are trying to do or how the project should be structured. It is worth the effort . Documentation is as important if not more important than code.","title":"Idea"},{"location":"idea/#quick-pitch","text":"functions - a command line tool that helps manage functions as a service (FaaS) components locally and remotely.","title":"Quick Pitch"},{"location":"idea/#background","text":"If you are a developer working with any cloud providers, the chance is, you would have heard about serverless functions. You can use them to run small, independent components that can scale on demand. Their scope is usually that of a single task. Examples include: building a single point API, building a triggered pipeline, connecting to a resource etc... It is a fantastic piece of technology that can decouple large systems and support a wide variety of cases. Generally, it is easy to deploy a simple serverless function as a template version to fit your basic needs. It gets a little more complicated if you face a task that is out of the ordinary. Questions emerge. How do you keep track of your work? What was deployed or what was run. How do you deploy the function? How do you test it? It is not easy to handle all that using a standard tool like the gcloud command-line tool, and it is not even close to being fast. Usually, you need to deploy the function to see any results. Some providers offer helpful libraries/tools that allow you to run your serverless functions locally, but even that quickly gets complicated and requires you to learn another repository and its documentation. Even if you pass through, the automations you built will be highly specific to the provider you are using by which you are locked in. One of the things that made HashiCorp products so great is that they allow for flexibility. Flexibility and modularity are becoming far more important nowadays than it ever was. In an attempt to tackle all these pain-points and make any serverless task a much more fun experience, we propose building a software tool that takes care of all the local environment, deployment, tracking, logging and provider-specific logic and gives a developer a homogeneous CLI interface to interact with their FaaS components. A tool that takes away the complexity and gives back an intuitive work tool for everyone to use.","title":"Background"},{"location":"idea/#progress-so-far","text":"The project started as a solo project in between jobs. It's scope was massively undercut from the start, but with time and experience, the spectrum became something that we can track with much higher confidence. The project is a battleground for growing developer skills, and it has been treated like that, still yet to see its first release.","title":"Progress so far"},{"location":"idea/#objectives","text":"Fail and learn. Experiment and test out various ideas. Provide value to at least one person. Get people interested.","title":"Objectives"},{"location":"idea/#principle-values","text":"Easy to Use. Safe. Simple.","title":"Principle Values"},{"location":"idea/#timeframe","text":"Stage Summary Delivery First Release The first release targets a stable alpha version with enough functionalities to test the idea in action. Planned for the end of 2021","title":"Timeframe"},{"location":"idea/#engineering-budget","text":"In the first stage, the project is being developed by a single person as a side project between jobs. Since that person has other commitments, the project has taken a lower priority, and work on it goes slower than anticipated. So if you believe in this project, the repository is set up to support community contributions if people value it enough to contribute.","title":"Engineering budget"},{"location":"idea/#monitoring-and-evaluation","text":"The project is being reviewed at least every month to reevaluate timeframes, view project interactions and adjust documentation accordingly.","title":"Monitoring and Evaluation"},{"location":"idea/#lessons-learned","text":"Beyond elemental learnings such as how to pick a suitable license or which tool to use to perform a specific task, here lay the lessons with a broader, more generic scope: It takes a lot of time, effort and brainpower to build a quality project. The scope is always bigger than you initially thought to be. It is vital to build and bring tools to the project. Planning out the scope and writing a comprehensive overview is reasonably the most crucial step. Otherwise, you are unsure what you are trying to do or how the project should be structured. It is worth the effort . Documentation is as important if not more important than code.","title":"Lessons learned"},{"location":"roadmap/","text":"To understand what this project is about, check out the idea section . Moving forward, our goal is to provide a valuable, tested, and robust tool that others can use to their benefit. First release and core project progress can be tracked here . Once we reach the base quality, the are other project and idea that we hope to work on, given that functions starts providing value and receives required traction. We plan to grow its capabilities, having some short and medium term goals in mind. Mission \u00b6 Make Functions as a Service (FaaS) easy to work with. Short-term - Current focus \u00b6 Clean up \u00b6 Initial prototype bursting left chunks on inconsistent code. We want to bring cohesion and best practices to the first version of the project so that the technical debt does not creep on us in the future. Status : Planning AWS lambda support \u00b6 We want to add support for AWS lambda functions locally and deployment. Status : Planning Runtime support \u00b6 Currently, the support for runtimes is quite limited due to the narrow scope of the initial implementation. We want to ensure anyone can use whichever runtime they want, given that it is supported. Status : Planning Test coverage \u00b6 As with any idea that made sense (will see about that) in the prototyping phase, we want to make sure that is well tested moving forward. Status : Planning Mid-term - What comes next \u00b6 Build-up documentation \u00b6 It is a shame how much documentation is missing. We want to make sure that there are decision records , components descriptions , examples and more, which users and developers can quickly reference at any time. Status : Ongoing development Custom commands and scripts \u00b6 We want to enable the user to create their enhancements to the functioning of the package by allowing the definition of custom scripts and commands. Status : Idea GitHub source URL as a source path for a function \u00b6 We want to support using a Github URL as a source for your function's source code. Status : Idea Evaluate Typer \u00b6 Despite the initial hype around this project, it does seem to be left out at the moment. The base package click seems to have much better support and extensibility. Status : Idea Docker executable \u00b6 We think that using python to execute the functions works well, however has it's limitations. Specifically when installing dependencies required to run deployment actions. All this can be neatly wrapped around with a Docker image, which needs to be in the scope of the package either way. Much easier to manage system interactions contained within an image. Status : Idea How to Get Involved \u00b6 We try to organize our project goals with GitHub projects. If there is an existing GitHub project, it is an excellent place to start aiding. If not, perhaps you can offer some expertise and lead an implementation forward. As always, reach out if you fancy a discussion.","title":"Roadmap"},{"location":"roadmap/#mission","text":"Make Functions as a Service (FaaS) easy to work with.","title":"Mission"},{"location":"roadmap/#short-term---current-focus","text":"","title":"Short-term - Current focus"},{"location":"roadmap/#clean-up","text":"Initial prototype bursting left chunks on inconsistent code. We want to bring cohesion and best practices to the first version of the project so that the technical debt does not creep on us in the future. Status : Planning","title":"Clean up"},{"location":"roadmap/#aws-lambda-support","text":"We want to add support for AWS lambda functions locally and deployment. Status : Planning","title":"AWS lambda support"},{"location":"roadmap/#runtime-support","text":"Currently, the support for runtimes is quite limited due to the narrow scope of the initial implementation. We want to ensure anyone can use whichever runtime they want, given that it is supported. Status : Planning","title":"Runtime support"},{"location":"roadmap/#test-coverage","text":"As with any idea that made sense (will see about that) in the prototyping phase, we want to make sure that is well tested moving forward. Status : Planning","title":"Test coverage"},{"location":"roadmap/#mid-term---what-comes-next","text":"","title":"Mid-term - What comes next"},{"location":"roadmap/#build-up-documentation","text":"It is a shame how much documentation is missing. We want to make sure that there are decision records , components descriptions , examples and more, which users and developers can quickly reference at any time. Status : Ongoing development","title":"Build-up documentation"},{"location":"roadmap/#custom-commands-and-scripts","text":"We want to enable the user to create their enhancements to the functioning of the package by allowing the definition of custom scripts and commands. Status : Idea","title":"Custom commands and scripts"},{"location":"roadmap/#github-source-url-as-a-source-path-for-a-function","text":"We want to support using a Github URL as a source for your function's source code. Status : Idea","title":"GitHub source URL as a source path for a function"},{"location":"roadmap/#evaluate-typer","text":"Despite the initial hype around this project, it does seem to be left out at the moment. The base package click seems to have much better support and extensibility. Status : Idea","title":"Evaluate Typer"},{"location":"roadmap/#docker-executable","text":"We think that using python to execute the functions works well, however has it's limitations. Specifically when installing dependencies required to run deployment actions. All this can be neatly wrapped around with a Docker image, which needs to be in the scope of the package either way. Much easier to manage system interactions contained within an image. Status : Idea","title":"Docker executable"},{"location":"roadmap/#how-to-get-involved","text":"We try to organize our project goals with GitHub projects. If there is an existing GitHub project, it is an excellent place to start aiding. If not, perhaps you can offer some expertise and lead an implementation forward. As always, reach out if you fancy a discussion.","title":"How to Get Involved"}]}